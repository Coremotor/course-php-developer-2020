Описание
Уважаемые слушатели, мы просим вас заполнить анкету. Это поможет улучшить наш сервис. После отправки анкеты вы увидите ссылку на чат этого курса в Телеграме, где вы сможете задавать вопросы преподавателям и общаться с однокурсниками.
Домашнее задание состоит из нескольких отдельных, не связанных между собой задач. Каждое задание делается в отдельном файле с уникальным пространством имен.

Домашний зоопарк

1. Нужно описать следующие классы:

Cat — Кот;
Dog — Собака;
Fish — Рыбка.
Каждый класс должен содержать свойство public $name — кличка животного. 

2. Создать конструктор класса, в котором это свойство будет проинициализировано (ему должно быть установлено значение).
3. Создать трех котиков, пять собачек и одну рыбку, у каждого животного должна быть своя кличка.

Голодный кот

1. Описать класс HungryCat. Кот должен иметь следующие свойства: кличку, цвет и любимую еду, которые должны быть проинициализированы в конструкторе.
2. Создать и реализовать метод public function eat($food) — внутри этого метода должна выводиться строка такого формата: "Голодный кот <кличка кота>, особые приметы: цвет - <цвет кота>, съел <название еды>". Если кот съел любимую еду, то также нужно вывести строку "и замурчал 'мррррр' от своей любимой еды".

3. Создать двух совершенно разных голодных котов и накормить каждого пятью разными блюдами. Оба котика обязательно должны помурчать.

Фабрика игрушек

1. Описать два класса: 

ToyFactory — Фабрика Игрушек.

Toy — игрушка, у каждой игрушки есть название и цена, которые должны быть проинициализированы в конструкторе.

2. Реализовать метод создания игрушки на фабрике public function createToy($name), который должен возвращать новый экземпляр игрушки со случайной ценой.

3. Создать случайное количество игрушек (воспользуйтесь функцией rand(int min, int max)): не менее 5 и не более 20 шт. Названия игрушек могут повторяться, но должны встречаться игрушки с разными названиями (не обязательно проверять, чтобы среди созданных игрушек в одном процессе выполнения программы обязательно присутствовали разные игрушки).
4. Вывести на экран построчно строки: <Название игрушки> — <Стоимость игрушки>.

5. Выведите на экран строку Итого — <Сумма стоимостей всех игрушек>.


Уведомления для клиента

a. Опишите классы User - пользователь, у пользователя обязательно должно быть указано ФИО и email, а также могут быть указаны, а могут и нет пол, возраст и телефон, которые должны быть проинициализированы в конструкторе

b. Опишите класс Notification - уведомление. У него должно быть три свойства, все являются обязательными и должны быть установлены в конструкторе

receiver - имя получателя,
via - канал уведомления, 
to - адрес получателя (номер телефона или значение email)
c. Создайте и реализуйте метод send класса Notification:

send(....) - выводит  строку "Уведомление клиенту: <ФИО> на <канал уведомления> (<email или телефон клиента>): <message>", подумайте какие параметры должен принимать этот метод. Например: "Уведомление клиенту: Владимир Николаевич на email (user1@email.com): goodbye"
d. создайте и реализуйте методы класса пользователя User

notifyOnEmail($message) -  Создает объект класса Notification и вызывает его метод send()
notifyOnPhone($message) - Создает объект класса Notification и вызывает его метод send()
notify($message) - отправляет сообщение на все каналы, доступные пользователю, описание ниже.
censor($message) - производит цензуру сообщения
PS Не забывайте указывать уровни доступа к вашим методам, у каждого метода должен быть указан свой уровень доступа (инкапсуляция), о ней мы подробнее расскажем в следующем уроке.
e. Описание метода notify($message): в случае если мы не уверены, что клиенту есть 18 лет - этот метод должен произвести цензуру сообщения (придумайте любую реализацию метода censor()), затем должен отправить уведомление клиенту на email и на телефон, если телефон указан.

f. Создайте Разных пользователей и отправьте им уведомления (вызвав только метод notify). Пользователи должны быть созданы так, чтобы был случай, когда не был указан телефон и когда бы был, а были случаи когда клиенту есть 18 и нет.


Интернет-магазин

1. Описать классы:

Order — Заказ, должен содержать корзину;
Basket — Корзина, должен содержать массив товаров с указанием количества каждого;
Product — Товар: у каждого товара есть название и цена, которые должны быть проинициализированы в конструкторе.
Класс Order должен содержать два метода:

getBasket() — возвращает корзину заказа;
getPrice() — возвращает общую стоимость заказа.
Класс Basket должен содержать следующие методы:

addProduct(Product $product, $quantity) — добавляет товар в корзину;
getPrice() — возвращает стоимость товаров в корзине;
describe() — выводит или возвращает информацию о корзине в виде строки: "<Наименование товара> — <Цена одной позиции> — <Количество>".
Класс Product должен содержать два метода:

getName() — возвращает наименование товара;
getPrice() — возвращает стоимость товара.
Реализовать все методы:

2. Создать корзину, заполнить ее товарами. Создать заказ на основе этой корзины: 

$order = new Order($basket);
3. Вывести информацию о корзине этого заказа и общую стоимость заказа.

4. Создать нового клиента "Николай Николаича" из предыдущего задания (не копируя описание его класса в этот файл) и отправить ему уведомление с текстом: 

"для вас создан заказ, на сумму: <сумма заказа>. Состав: <информация о корзине>".